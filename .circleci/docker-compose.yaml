version: '3.7'

services:
    zookeeper:
        image: confluentinc/cp-zookeeper:5.3.1
        hostname: zookeeper
        container_name: zookeeper-ci
        ports:
            - '2181:2181'
        environment:
            ZOOKEEPER_CLIENT_PORT: 2181
            ZOOKEEPER_TICK_TIME: 2000

    broker:
        image: confluentinc/cp-enterprise-kafka:5.3.1
        hostname: broker
        container_name: broker-ci
        depends_on:
            - zookeeper
        ports:
            - '9092:9092'
        environment:
            KAFKA_BROKER_ID: 1
            KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:29092,PLAINTEXT_HOST://localhost:9092
            KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
            KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
            KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
            CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: broker:29092
            CONFLUENT_METRICS_REPORTER_ZOOKEEPER_CONNECT: zookeeper:2181
            CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
            CONFLUENT_METRICS_ENABLE: 'true'
            CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'

    schema-registry:
        image: confluentinc/cp-schema-registry:5.3.1
        hostname: schema-registry
        container_name: schema-registry-ci
        depends_on:
            - zookeeper
            - broker
        ports:
            - '8081:8081'
        environment:
            SCHEMA_REGISTRY_HOST_NAME: schema-registry
            SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'

    connect:
        image: dearsaturn/kafka-connect-with-drivers:latest
        hostname: connect
        container_name: connect-ci
        depends_on:
            - zookeeper
            - broker
            - schema-registry
        ports:
            - '8083:8083'
        environment:
            CONNECT_BOOTSTRAP_SERVERS: 'broker:29092'
            CONNECT_REST_ADVERTISED_HOST_NAME: connect
            CONNECT_REST_PORT: 8083
            CONNECT_GROUP_ID: compose-connect-group
            CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
            CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
            CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
            CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
            CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
            CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
            CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
            CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
            CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
            CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
            CONNECT_ZOOKEEPER_CONNECT: 'zookeeper:2181'
            # CLASSPATH required due to CC-2422
            CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.3.1.jar
            CONNECT_PRODUCER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor'
            CONNECT_CONSUMER_INTERCEPTOR_CLASSES: 'io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor'
            CONNECT_PLUGIN_PATH: '/usr/share/java,/usr/share/confluent-hub-components'
            CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR

    rest-proxy:
        image: confluentinc/cp-kafka-rest:5.3.1
        depends_on:
            - zookeeper
            - broker
            - schema-registry
        ports:
            - 8082:8082
        hostname: rest-proxy
        container_name: rest-proxy-ci
        environment:
            KAFKA_REST_HOST_NAME: rest-proxy
            KAFKA_REST_BOOTSTRAP_SERVERS: 'broker:29092'
            KAFKA_REST_LISTENERS: 'http://0.0.0.0:8082'
            KAFKA_REST_SCHEMA_REGISTRY_URL: 'http://schema-registry:8081'

    mysql57:
        image: mysql:5.7.28
        command: --default-authentication-plugin=mysql_native_password
        restart: always
        ports:
            - 3306:3306
            - 33060:33060
        container_name: mysql-ci
        environment:
            MYSQL_ROOT_PASSWORD: admin
            MYSQL_DATABASE: circle_test

    circleci-node:
        build:
            context: ..
            dockerfile: docker/Dockerfile
        depends_on:
            - mysql57
            - broker
            - connect
            - rest-proxy
        container_name: circleci-node
        environment:
            SQL_DB_HOST: mysql57
            SQL_DB_USER: root
            SQL_DB_PASSWORD: admin
            SQL_DB_DATABASE: circle_test
            TERM: xterm-256color
        working_dir: /code
        command: /bin/bash
        tty: true
