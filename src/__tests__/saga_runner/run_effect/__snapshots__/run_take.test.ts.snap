// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`SagaRunner take given an action channel pattern takes from the action channel's buffer 1`] = `
Object {
  "headers": Object {},
  "payload": Object {
    "bart_simpson": "bad",
  },
  "topic": "test-take-action-channel",
  "transaction_id": "static-transaction-id",
}
`;

exports[`SagaRunner take given an action channel pattern takes from the action channel's buffer 2`] = `
Array [
  Array [
    Object {
      "observer": [Function],
      "topic": "test-take-action-channel",
      "transactionId": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take given an action channel pattern takes from the action channel's buffer 3`] = `
Array [
  Array [
    "test-take-action-channel",
  ],
]
`;

exports[`SagaRunner take given an action channel pattern takes from the action channel's buffer 4`] = `
Array [
  Array [
    Object {
      "headers": Object {},
      "payload": Object {
        "bart_simpson": "bad",
      },
      "topic": "test-take-action-channel",
      "transaction_id": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind PredicateRecord begins streaming actions from the stream matching the pattern 1`] = `
Object {
  "headers": Object {},
  "payload": Object {
    "bart_simpson": "eat_my_shorts",
  },
  "topic": "test-topic-1",
  "transaction_id": "static-transaction-id",
}
`;

exports[`SagaRunner take given simple patterns given a pattern of kind PredicateRecord begins streaming actions from the stream matching the pattern 2`] = `
Array [
  Array [
    Object {
      "observer": [Function],
      "topic": "test-topic-1",
      "transactionId": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind PredicateRecord begins streaming actions from the stream matching the pattern 3`] = `
Array [
  Array [
    "test-topic-1",
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string begins streaming actions from the stream matching the pattern 1`] = `
Object {
  "headers": Object {},
  "payload": Object {
    "bart_simpson": "eat_my_shorts",
  },
  "topic": "test-topic-1",
  "transaction_id": "static-transaction-id",
}
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string begins streaming actions from the stream matching the pattern 2`] = `
Array [
  Array [
    Object {
      "observer": [Function],
      "topic": "test-topic-1",
      "transactionId": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string begins streaming actions from the stream matching the pattern 3`] = `
Array [
  Array [
    "test-topic-1",
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string[] begins streaming actions from the stream matching the pattern 1`] = `
Object {
  "headers": Object {},
  "payload": Object {
    "bart_simpson": "eat_my_shorts",
  },
  "topic": "test-topic-1",
  "transaction_id": "static-transaction-id",
}
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string[] begins streaming actions from the stream matching the pattern 2`] = `
Array [
  Array [
    Object {
      "observer": [Function],
      "topic": "test-topic-1",
      "transactionId": "static-transaction-id",
    },
  ],
  Array [
    Object {
      "observer": [Function],
      "topic": "test-topic-2",
      "transactionId": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take given simple patterns given a pattern of kind string[] begins streaming actions from the stream matching the pattern 3`] = `
Array [
  Array [
    "test-topic-1",
  ],
  Array [
    "test-topic-2",
  ],
]
`;

exports[`SagaRunner take races results from the streams 1`] = `
Object {
  "headers": Object {},
  "payload": Object {
    "bart_simpson": "winner",
  },
  "topic": "test-take-fast",
  "transaction_id": "static-transaction-id",
}
`;

exports[`SagaRunner take races results from the streams 2`] = `
Array [
  Array [
    Object {
      "observer": [Function],
      "topic": "test-take-slow",
      "transactionId": "static-transaction-id",
    },
  ],
  Array [
    Object {
      "observer": [Function],
      "topic": "test-take-fast",
      "transactionId": "static-transaction-id",
    },
  ],
]
`;

exports[`SagaRunner take races results from the streams 3`] = `
Array [
  Array [
    "test-take-slow",
  ],
  Array [
    "test-take-fast",
  ],
]
`;
